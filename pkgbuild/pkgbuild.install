#!/usr/bin/env bash
# This file contains scripts that are executed at different stages of package installation/upgrade/removal

# Color definitions for status messages
blueDark="\e[1;38;5;33m"     # Bold dark blue
mediumBlue="\e[1;38;5;32m"   # Bold medium blue
lightBlue="\e[1;38;5;39m"    # Bold light blue
cyan="\e[1;38;5;45m"         # Bold cyan
white="\e[1;97m"             # Bold white
reset="\e[0m"                # Reset text formatting

# Print status messages - CHANGE 'PACKAGE_NAME' to your actual package name
printMsg() {
    local message=$1
    echo -e "${blueDark}[${lightBlue}comm-libvirt-config${blueDark}]${reset} ${cyan}â†’${reset} ${white}${message}${reset}"
}

post_install() {
    printMsg "Adding users to the docker group..."
    for user in $(awk -F':' '{ if ($3 >= 1000 && $1 != "nobody") print $1 }' /etc/passwd); do
        usermod -aG libvirt "$user" >/dev/null 2>&1
    done
    # Starting libvirtd
    printMsg "Starting libvirtd service..."

    systemctl start libvirtd.service >/dev/null 2>&1

    # Enable libvirtd to start on boot
    printMsg "Enabling libvirtd service..."
    
    systemctl enable --now libvirtd.service >/dev/null 2>&1

    printMsg "Libvirtd configuration completed successfully"
}


# Function executed after package upgrade
post_upgrade() {
    printMsg "Reapplying configuration after upgrade..."
    post_install
}


# Function executed after package removal
post_remove() {
    printMsg "==> [comm-virt-setup] Removing users from the libvirt group..."
    for user in $(awk -F':' '{ if ($3 >= 1000 && $1 != "nobody") print $1 }' /etc/passwd); do
        gpasswd -d "$user" libvirt >/dev/null 2>&1
    done

    printMsg "Disabling libvirtd service..."
    systemctl disable libvirtd.service >/dev/null 2>&1

    printMsg "Stopping libvirtd service..."
    systemctl stop libvirtd.service >/dev/null 2>&1

    printMsg "Libvirtd configuration has been cleaned up."
}
